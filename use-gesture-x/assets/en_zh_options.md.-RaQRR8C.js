import{_ as e,c as d,o as r,al as o}from"./chunks/framework.CPtjGQFS.js";const p=JSON.parse('{"title":"@use-gesture-x/vue3 配置选项说明文档","description":"","frontmatter":{},"headers":[],"relativePath":"en/zh/options.md","filePath":"en/zh/options.md"}'),n={name:"en/zh/options.md"};function a(s,t,l,c,g,i){return r(),d("div",null,[...t[0]||(t[0]=[o('<h1 id="use-gesture-x-vue3-配置选项说明文档" tabindex="-1">@use-gesture-x/vue3 配置选项说明文档 <a class="header-anchor" href="#use-gesture-x-vue3-配置选项说明文档" aria-label="Permalink to &quot;@use-gesture-x/vue3 配置选项说明文档&quot;">​</a></h1><h3 id="gesture-config-options" tabindex="-1">Gesture Config Options <a class="header-anchor" href="#gesture-config-options" aria-label="Permalink to &quot;Gesture Config Options&quot;">​</a></h3><p>以下是可应用于手势的所有选项。</p><blockquote><p>并非所有选项都适用于所有手势。在下表中，xy 代表基于坐标的手势，包括拖动（drag）、移动（move）、滚轮（wheel）和滚动（scroll）。</p></blockquote><table tabindex="0"><thead><tr><th>配置项</th><th style="text-align:center;">手势</th><th>描述</th></tr></thead><tbody><tr><td><a href="#enabled"><code>enabled</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>该手势是否启用.</td></tr><tr><td><a href="#eventoptions"><code>eventOptions</code></a></td><td style="text-align:center;">允许你自定义事件是采用被动模式还是捕获模式。此设置会覆盖共享选项。</td><td></td></tr><tr><td><a href="#from"><code>from</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>初始位置offset应该从…… 开始. 例如：<code>from: [0, 0]</code> 表示初始位置offset应该从 <code>[0, 0]</code> 开始.</td></tr><tr><td><a href="#threshold"><code>threshold</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>只有当手势位移大于阈值时，处理器才会触发。.</td></tr><tr><td><a href="#preventdefault"><code>preventDefault</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>将阻止由处理程序触发的所有事件的preventDefault.</td></tr><tr><td><a href="#triggerallevents"><code>triggerAllEvents</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>强制处理器即使在非故意位移的情况下也会触发（忽略threshold）。在这种情况下，状态中的intentional属性将保持为false，直到达到阈值。</td></tr><tr><td><a href="#axis"><code>axis</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>只有在指定轴上检测到移动时，你的处理器才会触发。</td></tr><tr><td><a href="#axisthreshold"><code>axisThreshold</code></a></td><td style="text-align:center;"><strong>xy</strong></td><td>轴是根据阈值计算的。对于拖动操作，阈值按设备类型指定。</td></tr><tr><td><a href="#bounds"><code>bounds</code></a></td><td style="text-align:center;"><strong>xy</strong></td><td>将手势 “偏移量” 限制在指定范围内</td></tr><tr><td><a href="#scalebounds"><code>scaleBounds</code></a></td><td style="text-align:center;"><strong>pinch</strong></td><td>将缩放 “偏移量” 限制在指定范围内。</td></tr><tr><td><a href="#anglebounds"><code>angleBounds</code></a></td><td style="text-align:center;"><strong>pinch</strong></td><td>将角度 “偏移量” 限制在指定范围内.</td></tr><tr><td><a href="#modifierkey"><code>modifierKey</code></a></td><td style="text-align:center;"><strong>pinch</strong></td><td>滚动时触发缩放的修饰键。默认为 &#39;ctrlKey&#39;。可以为 null。</td></tr><tr><td><code>pinchOnWheel</code></td><td style="text-align:center;"><strong>pinch</strong></td><td>如果为 false，则会禁用滚轮捏合操作。</td></tr><tr><td><a href="#rubberband"><code>rubberband</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>手势越界时的弹性系数。当设置为true时，弹性系数将默认为0.15</td></tr><tr><td><a href="#transform"><code>transform</code></a></td><td style="text-align:center;"><strong>all</strong></td><td>一个可用于转换指针值的函数。它有助于将屏幕坐标映射到自定义空间坐标，例如画布坐标。</td></tr><tr><td><a href="#filtertaps"><code>filterTaps</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果为true，则当用户只是点击该组件时，该组件不会触发你的拖动逻辑。</td></tr><tr><td><a href="#tapsthreshold"><code>tapsThreshold</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>使用filterTaps选项时，自定义位移触发的轻触次数。默认值为3。</td></tr><tr><td><a href="#preventscroll"><code>preventScroll</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果设置了该参数，拖动将在延迟时长（以ms为单位）后触发，并且会阻止窗口滚动。当设置为true时，preventScroll的默认值为 250 毫秒。</td></tr><tr><td><a href="#preventscrollaxis"><code>preventScrollAxis</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果设置了该属性，除非超过了 preventScroll 的持续时间，否则拖动将允许沿坐标轴方向滚动。默认情况下仅为 “y” 轴。</td></tr><tr><td><a href="#pointertouch"><code>pointer.touch</code></a></td><td style="text-align:center;"><strong>drag,pinch</strong></td><td>如果为 true，则在支持触摸的设备上，拖动和捏合操作将使用触摸事件。<a href="#pointertouch">详情</a>.</td></tr><tr><td><a href="#pointercapture"><code>pointer.capture</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果为 false，拖动将不会使用 setPointerCapture，也不会将 pointerMove 事件附加到窗口 <a href="#pointercapture">详情</a>.</td></tr><tr><td><code>pointer.mouse</code></td><td style="text-align:center;"><strong>drag</strong></td><td>如果为true，则在可能的情况下，拖拽将使用鼠标事件监听器而非指针监听器。</td></tr><tr><td><a href="#pointerbuttons"><code>pointer.buttons</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>触发拖动手势的按钮组合. <a href="#pointerbuttons">详情</a>.</td></tr><tr><td><a href="#pointerlock"><code>pointer.lock</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果为 true，指针将在拖动开始时进入指针锁定模式，并在拖动结束时退出指针锁定模式。. <a href="#pointerlock">Read more below</a>.</td></tr><tr><td><a href="#pointerkeys"><code>pointer.keys</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>默认情况下，当可拖动元素获得焦点时，拖动手势可通过方向键触发。将keys设置为false则不会添加键盘事件监听器。</td></tr><tr><td><a href="#delay"><code>delay</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>如果设置了该处理程序，它将延迟一段时间（以ms为单位）—— 或者在用户开始移动时延迟。当设置为true时，delay的默认值为 180 毫秒。</td></tr><tr><td><a href="#swipedistance"><code>swipe.distance</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>拖动手势需要移动的每个轴的最小距离（以 “像素” 为单位），以触发滑动。</td></tr><tr><td><a href="#swipevelocity"><code>swipe.velocity</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>拖动手势在指针释放前需要达到的每个轴的最小速度（单位为像素/毫秒）。</td></tr><tr><td><a href="#swipeduration"><code>swipe.duration</code></a></td><td style="text-align:center;"><strong>drag</strong></td><td>检测到一次滑动的最长持续时间（以毫秒为单位）。</td></tr><tr><td><code>keyboardDisplacement</code></td><td style="text-align:center;"><strong>drag</strong></td><td>箭头键模拟的距离（以像素为单位）。默认值为10。</td></tr><tr><td><code>mouseOnly</code></td><td style="text-align:center;"><strong>hover, move</strong></td><td>如果希望在非鼠标事件上触发hover（悬停）或move（移动）处理器，请将其设置为false。在需要在支持触摸的设备上执行逻辑的情况下，这是一个很有用的选项。</td></tr></tbody></table>',5)])])}const f=e(n,[["render",a]]);export{p as __pageData,f as default};
