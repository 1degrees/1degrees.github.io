(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{408:function(t,a,e){"use strict";e.r(a);var s=e(25),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"九、-网页元素接口拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、-网页元素接口拓展"}},[t._v("#")]),t._v(" 九、 网页元素接口拓展")]),t._v(" "),a("h2",{attrs:{id:"_1-a-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-a-元素"}},[t._v("#")]),t._v(" 1 a 元素")]),t._v(" "),a("p",[a("code",[t._v("<a/>")]),t._v("元素用来设置链接。除了网页元素的通用接口（"),a("code",[t._v("Node")]),t._v("接口、"),a("code",[t._v("Element")]),t._v("接口、"),a("code",[t._v("HTMLElement")]),t._v("接口），它还继承了"),a("code",[t._v("HTMLAnchorElement")]),t._v("接口和"),a("code",[t._v("HTMLHyperlinkElementUtils")]),t._v("接口。")]),t._v(" "),a("h3",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("h3",{attrs:{id:"url-相关属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-相关属性"}},[t._v("#")]),t._v(" URL 相关属性")]),t._v(" "),a("p",[a("code",[t._v("<a/>")]),t._v("元素有一系列 URL 相关属性，可以用来操作链接地址。这些属性的含义，可以参见"),a("code",[t._v("Location")]),t._v("对象的实例属性。")]),t._v(" "),a("ul",[a("li",[t._v("hash：片段识别符（以"),a("code",[t._v("#")]),t._v("开头）")]),t._v(" "),a("li",[t._v("host：主机和端口（默认端口80和443会省略）")]),t._v(" "),a("li",[t._v("hostname：主机名")]),t._v(" "),a("li",[t._v("href：完整的 URL")]),t._v(" "),a("li",[t._v("origin：协议、域名和端口")]),t._v(" "),a("li",[t._v("password：主机名前的密码")]),t._v(" "),a("li",[t._v("pathname：路径（以"),a("code",[t._v("/")]),t._v("开头）")]),t._v(" "),a("li",[t._v("port：端口")]),t._v(" "),a("li",[t._v("protocol：协议（包含尾部的冒号"),a("code",[t._v(":")]),t._v("）")]),t._v(" "),a("li",[t._v("search：查询字符串（以"),a("code",[t._v("?")]),t._v("开头）")]),t._v(" "),a("li",[t._v("username：主机名前的用户名")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="http://user:passwd@example.com:8081/index.html?bar=1#foo">test</a>')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "#foo"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "example.com:8081"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "example.com"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://user:passed@example.com:8081/index.html?bar=1#foo"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("origin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://example.com:8081"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("password "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "passwd"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathname "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "/index.html"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "8081"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protocol "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http:"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "?bar=1"')]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "user"')]),t._v("\n")])])]),a("p",[t._v("除了"),a("code",[t._v("origin")]),t._v("属性是只读的，上面这些属性都是可读写的。")]),t._v(" "),a("h3",{attrs:{id:"accesskey-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accesskey-属性"}},[t._v("#")]),t._v(" accessKey 属性")]),t._v(" "),a("p",[a("code",[t._v("accessKey")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的快捷键。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="http://example.com">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("accessKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面代码设置"),a("code",[t._v("<a>")]),t._v("元素的快捷键为"),a("code",[t._v("k")]),t._v("，以后只要按下这个快捷键，浏览器就会跳转到"),a("code",[t._v("example.com")]),t._v("。")]),t._v(" "),a("p",[t._v("注意，不同的浏览器在不同的操作系统下，唤起快捷键的功能键组合是"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey",target:"_blank",rel:"noopener noreferrer"}},[t._v("不一样"),a("OutboundLink")],1),t._v("的。比如，Chrome 浏览器在 Linux 系统下，需要按下"),a("code",[t._v("Alt + k")]),t._v("，才会跳转到"),a("code",[t._v("example.com")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"download-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download-属性"}},[t._v("#")]),t._v(" download 属性")]),t._v(" "),a("p",[a("code",[t._v("download")]),t._v("属性表示当前链接不是用来浏览，而是用来下载的。它的值是一个字符串，表示用户下载得到的文件名。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="foo.jpg">下载</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面代码中，"),a("code",[t._v("<a>")]),t._v("元素是一个图片链接，默认情况下，点击后图片会在当前窗口加载。设置了"),a("code",[t._v("download")]),t._v("属性以后，再点击这个链接，就会下载对话框，询问用户保存位置，而且下载的文件名为"),a("code",[t._v("bar.jpg")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"hreflang-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hreflang-属性"}},[t._v("#")]),t._v(" hreflang 属性")]),t._v(" "),a("p",[a("code",[t._v("hreflang")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("hreflang")]),t._v("，表示链接指向的资源的语言，比如"),a("code",[t._v('hreflang="en"')]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com" hreflang="en">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hreflang "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "en"')]),t._v("\n")])])]),a("h3",{attrs:{id:"referrerpolicy-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#referrerpolicy-属性"}},[t._v("#")]),t._v(" referrerPolicy 属性")]),t._v(" "),a("p",[a("code",[t._v("referrerPolicy")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("referrerPolicy")]),t._v("，指定当用户点击链接时，如何发送 HTTP 头信息的"),a("code",[t._v("referer")]),t._v("字段。")]),t._v(" "),a("p",[t._v("HTTP 头信息的"),a("code",[t._v("referer")]),t._v("字段，表示当前请求是从哪里来的。它的格式可以由"),a("code",[t._v("<a>")]),t._v("元素的"),a("code",[t._v("referrerPolicy")]),t._v("属性指定，共有三个值可以选择。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("no-referrer")]),t._v("：不发送"),a("code",[t._v("referer")]),t._v("字段。")]),t._v(" "),a("li",[a("code",[t._v("origin")]),t._v("："),a("code",[t._v("referer")]),t._v("字段的值是"),a("code",[t._v("<a>")]),t._v("元素的"),a("code",[t._v("origin")]),t._v("属性，即协议 + 主机名 + 端口。")]),t._v(" "),a("li",[a("code",[t._v("unsafe-url")]),t._v("："),a("code",[t._v("referer")]),t._v("字段的值是"),a("code",[t._v("origin")]),t._v("属性再加上路径，但不包含"),a("code",[t._v("#")]),t._v("片段。这种格式提供的信息最详细，可能存在信息泄漏的风险。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com" referrerpolicy="no-referrer">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referrerPolicy "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "no-referrer"')]),t._v("\n")])])]),a("h3",{attrs:{id:"rel-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rel-属性"}},[t._v("#")]),t._v(" rel 属性")]),t._v(" "),a("p",[a("code",[t._v("rel")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("rel")]),t._v("，表示链接与当前文档的关系。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com" rel="license">license.html</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rel "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "license"')]),t._v("\n")])])]),a("h3",{attrs:{id:"tabindex-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tabindex-属性"}},[t._v("#")]),t._v(" tabIndex 属性")]),t._v(" "),a("p",[a("code",[t._v("tabIndex")]),t._v("属性的值是一个整数，用来读写当前"),a("code",[t._v("<a>")]),t._v("元素在文档里面的 Tab 键遍历顺序。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tabIndex "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("h3",{attrs:{id:"target-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target-属性"}},[t._v("#")]),t._v(" target 属性")]),t._v(" "),a("p",[a("code",[t._v("target")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("target")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com" target="_blank">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "_blank"')]),t._v("\n")])])]),a("h3",{attrs:{id:"text-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-属性"}},[t._v("#")]),t._v(" text 属性")]),t._v(" "),a("p",[a("code",[t._v("text")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的链接文本，等同于当前节点的"),a("code",[t._v("textContent")]),t._v("属性。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" href="https://example.com">test</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "test"')]),t._v("\n")])])]),a("h3",{attrs:{id:"type-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-属性"}},[t._v("#")]),t._v(" type 属性")]),t._v(" "),a("p",[a("code",[t._v("type")]),t._v("属性用来读写"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("type")]),t._v("，表示链接目标的 MIME 类型。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <a id="test" type="video/mp4" href="example.mp4">video</a>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "video/mp4"')]),t._v("\n")])])]),a("h3",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[a("code",[t._v("<a>")]),t._v("元素的方法都是继承的，主要有以下三个。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("blur()")]),t._v("：从当前元素移除键盘焦点，详见"),a("code",[t._v("HTMLElement")]),t._v("接口的介绍。")]),t._v(" "),a("li",[a("code",[t._v("focus()")]),t._v("：当前元素得到键盘焦点，详见"),a("code",[t._v("HTMLElement")]),t._v("接口的介绍。")]),t._v(" "),a("li",[a("code",[t._v("toString()")]),t._v("：返回当前"),a("code",[t._v("<a>")]),t._v("元素的 HTML 属性"),a("code",[t._v("href")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"_2-img-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-img-元素"}},[t._v("#")]),t._v(" 2 img 元素")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[a("code",[t._v("<img>")]),t._v("元素用于插入图片，主要继承了 HTMLImageElement 接口。")]),t._v(" "),a("p",[t._v("浏览器提供一个原生构造函数"),a("code",[t._v("Image")]),t._v("，用于生成"),a("code",[t._v("HTMLImageElement")]),t._v("实例。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nimg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLImageElement")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("Image")]),t._v("构造函数可以接受两个整数作为参数，分别表示"),a("code",[t._v("<img>")]),t._v("元素的宽度和高度。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myImage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("<img>")]),t._v("实例的"),a("code",[t._v("src")]),t._v("属性可以定义图像的网址。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'picture.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("新生成的"),a("code",[t._v("<img>")]),t._v("实例并不属于文档的一部分。如果想让它显示在文档中，必须手动插入文档。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image1.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("除了使用"),a("code",[t._v("Image")]),t._v("构造，下面的方法也可以得到"),a("code",[t._v("HTMLImageElement")]),t._v("实例。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("document.images")]),t._v("的成员")]),t._v(" "),a("li",[t._v("节点选取方法（比如"),a("code",[t._v("document.getElementById")]),t._v("）得到的"),a("code",[t._v("<img>")]),t._v("节点")]),t._v(" "),a("li",[a("code",[t._v("document.createElement('img')")]),t._v("生成的"),a("code",[t._v("<img>")]),t._v("节点")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLImageElement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myImg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLImageElement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLImageElement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("HTMLImageElement")]),t._v("实例除了具有 Node、Element、HTMLElement 接口以外，还拥有一些独有的属性。这个接口没有定义自己的方法。")]),t._v(" "),a("h3",{attrs:{id:"特性相关的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性相关的属性"}},[t._v("#")]),t._v(" 特性相关的属性")]),t._v(" "),a("p",[a("strong",[t._v("（1）HTMLImageElement.src")])]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.src")]),t._v("属性返回图像的完整网址。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <img width="300" height="400" id="myImg" src="http://example.com/pic.jpg">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://example.com/pic.jpg")]),t._v("\n")])])]),a("p",[a("strong",[t._v("（2）HTMLImageElement.currentSrc")])]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.currentSrc")]),t._v("属性返回当前正在展示的图像的网址。JavaScript 和 CSS 的 mediaQuery 都可能改变正在展示的图像。")]),t._v(" "),a("p",[a("strong",[t._v("（3）HTMLImageElement.alt")])]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.alt")]),t._v("属性可以读写"),a("code",[t._v("<img>")]),t._v("的 HTML 属性"),a("code",[t._v("alt")]),t._v("，表示对图片的文字说明。")]),t._v(" "),a("p",[a("strong",[t._v("（4）HTMLImageElement.isMap，HTMLImageElement.useMap")])]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.isMap")]),t._v("属性对应"),a("code",[t._v("<img>")]),t._v("元素的 HTML 属性"),a("code",[t._v("ismap")]),t._v("，返回一个布尔值，表示图像是否为服务器端的图像映射的一部分。")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.useMap")]),t._v("属性对应"),a("code",[t._v("<img>")]),t._v("元素的 HTML 属性"),a("code",[t._v("usemap")]),t._v("，表示当前图像对应的"),a("code",[t._v("<map>")]),t._v("元素。")]),t._v(" "),a("p",[a("strong",[t._v("（5）HTMLImageElement.srcset，HTMLImageElement.sizes")])]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.srcset")]),t._v("属性和"),a("code",[t._v("HTMLImageElement.sizes")]),t._v("属性，分别用于读写"),a("code",[t._v("<img>")]),t._v("元素的"),a("code",[t._v("srcset")]),t._v("属性和"),a("code",[t._v("sizes")]),t._v("属性。它们用于"),a("code",[t._v("<img>")]),t._v("元素的响应式加载。"),a("code",[t._v("srcset")]),t._v("属性可以单独使用，但是"),a("code",[t._v("sizes")]),t._v("属性必须与"),a("code",[t._v("srcset")]),t._v("属性同时使用。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <img srcset="example-320w.jpg 320w,')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//              example-480w.jpg 480w,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//              example-800w.jpg 800w"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      sizes="(max-width: 320px) 280px,')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             (max-width: 480px) 440px,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//             800px"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      id="myImg"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      src="example-800w.jpg">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myImg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("srcset\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "example-320w.jpg 320w,')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  example-480w.jpg 480w,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  example-800w.jpg 800w"')]),t._v("\n\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sizes\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "(max-width: 320px) 280px,')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  (max-width: 480px) 440px,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  800px"')]),t._v("\n")])])]),a("p",[t._v("上面代码中，"),a("code",[t._v("sizes")]),t._v("属性指定，对于小于"),a("code",[t._v("320px")]),t._v("的屏幕，图像的宽度为"),a("code",[t._v("280px")]),t._v("；对于小于"),a("code",[t._v("480px")]),t._v("的屏幕，图像宽度为"),a("code",[t._v("440px")]),t._v("；其他情况下，图像宽度为"),a("code",[t._v("800px")]),t._v("。然后，浏览器会根据当前屏幕下的图像宽度，到"),a("code",[t._v("srcset")]),t._v("属性加载宽度最接近的图像。")]),t._v(" "),a("h3",{attrs:{id:"htmlimageelement-width-htmlimageelement-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-width-htmlimageelement-height"}},[t._v("#")]),t._v(" HTMLImageElement.width，HTMLImageElement.height")]),t._v(" "),a("p",[a("code",[t._v("width")]),t._v("属性表示"),a("code",[t._v("<img>")]),t._v("的 HTML 宽度，"),a("code",[t._v("height")]),t._v("属性表示高度。这两个属性返回的都是整数。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <img width="300" height="400" id="myImg" src="pic.jpg">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 300")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 400")]),t._v("\n")])])]),a("p",[t._v("如果图像还没有加载，这两个属性返回的都是"),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("p",[t._v("如果 HTML 代码没有设置"),a("code",[t._v("width")]),t._v("和"),a("code",[t._v("height")]),t._v("属性，则它们返回的是图像的实际宽度和高度，即"),a("code",[t._v("HTMLImageElement.naturalWidth")]),t._v("属性和"),a("code",[t._v("HTMLImageElement.naturalHeight")]),t._v("属性。")]),t._v(" "),a("h3",{attrs:{id:"htmlimageelement-naturalwidth-htmlimageelement-naturalheight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-naturalwidth-htmlimageelement-naturalheight"}},[t._v("#")]),t._v(" HTMLImageElement.naturalWidth，HTMLImageElement.naturalHeight")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.naturalWidth")]),t._v("属性表示图像的实际宽度（单位像素），"),a("code",[t._v("HTMLImageElement.naturalHeight")]),t._v("属性表示实际高度。这两个属性返回的都是整数。")]),t._v(" "),a("p",[t._v("如果图像还没有指定或不可得，这两个属性都等于"),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("naturalHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("naturalWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'portrait'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面代码中，如果图片的高度大于宽度，则设为"),a("code",[t._v("portrait")]),t._v("模式。")]),t._v(" "),a("h3",{attrs:{id:"htmlimageelement-complete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-complete"}},[t._v("#")]),t._v(" HTMLImageElement.complete")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.complete")]),t._v("属性返回一个布尔值，表示图表是否已经加载完成。如果"),a("code",[t._v("<img>")]),t._v("元素没有"),a("code",[t._v("src")]),t._v("属性，也会返回"),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"htmlimageelement-crossorigin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-crossorigin"}},[t._v("#")]),t._v(" HTMLImageElement.crossOrigin")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.crossOrigin")]),t._v("属性用于读写"),a("code",[t._v("<img>")]),t._v("元素的"),a("code",[t._v("crossorigin")]),t._v("属性，表示跨域设置。")]),t._v(" "),a("p",[t._v("这个属性有两个可能的值。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("anonymous")]),t._v("：跨域请求不要求用户身份（credentials），这是默认值。")]),t._v(" "),a("li",[a("code",[t._v("use-credentials")]),t._v("：跨域请求要求用户身份。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML 代码如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <img crossorigin="anonymous" id="myImg" src="pic.jpg">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crossOrigin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "anonymous"')]),t._v("\n")])])]),a("h3",{attrs:{id:"htmlimageelement-referrerpolicy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-referrerpolicy"}},[t._v("#")]),t._v(" HTMLImageElement.referrerPolicy")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.referrerPolicy")]),t._v("用来读写"),a("code",[t._v("<img>")]),t._v("元素的 HTML 属性"),a("code",[t._v("referrerpolicy")]),t._v("，表示请求图像资源时，如何处理 HTTP 请求的"),a("code",[t._v("referrer")]),t._v("字段。")]),t._v(" "),a("p",[t._v("它有五个可能的值。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("no-referrer")]),t._v("：不带有"),a("code",[t._v("referrer")]),t._v("字段。")]),t._v(" "),a("li",[a("code",[t._v("no-referrer-when-downgrade")]),t._v("：如果请求的地址不是 HTTPS 协议，就不带有"),a("code",[t._v("referrer")]),t._v("字段，这是默认值。")]),t._v(" "),a("li",[a("code",[t._v("origin")]),t._v("："),a("code",[t._v("referrer")]),t._v("字段是当前网页的地址，包含协议、域名和端口。")]),t._v(" "),a("li",[a("code",[t._v("origin-when-cross-origin")]),t._v("：如果请求的地址与当前网页是同源关系，那么"),a("code",[t._v("referrer")]),t._v("字段将带有完整路径，否则将只包含协议、域名和端口。")]),t._v(" "),a("li",[a("code",[t._v("unsafe-url")]),t._v("："),a("code",[t._v("referrer")]),t._v("字段包含当前网页的地址，除了协议、域名和端口以外，还包括路径。这个设置是不安全的，因为会泄漏路径信息。")])]),t._v(" "),a("h3",{attrs:{id:"htmlimageelement-x-htmlimageelement-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlimageelement-x-htmlimageelement-y"}},[t._v("#")]),t._v(" HTMLImageElement.x，HTMLImageElement.y")]),t._v(" "),a("p",[a("code",[t._v("HTMLImageElement.x")]),t._v("属性返回图像左上角相对于页面左上角的横坐标，"),a("code",[t._v("HTMLImageElement.y")]),t._v("属性返回纵坐标。")]),t._v(" "),a("h3",{attrs:{id:"事件属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件属性"}},[t._v("#")]),t._v(" 事件属性")]),t._v(" "),a("p",[t._v("图像加载完成，会触发"),a("code",[t._v("onload")]),t._v("属性指定的回调函数。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// HTML 代码为 <img src="example.jpg" onload="loadImage()">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadImage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Image is loaded'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("图像加载过程中发生错误，会触发"),a("code",[t._v("onerror")]),t._v("属性指定的回调函数。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// HTML 代码为 <img src="image.gif" onerror="myFunction()">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There is something wrong'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-form-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-form-元素"}},[t._v("#")]),t._v(" 3 form 元素")]),t._v(" "),a("p",[a("code",[t._v("<form/>")]),t._v("元素代表了表单，继承了 HTMLFormElement 接口。")]),t._v(" "),a("h3",{attrs:{id:"htmlformelement-的实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlformelement-的实例属性"}},[t._v("#")]),t._v(" HTMLFormElement 的实例属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("elements")]),t._v("：返回一个类似数组的对象，成员是属于该表单的所有控件元素。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("length")]),t._v("：返回一个整数，表示属于该表单的控件数量。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v("：字符串，表示该表单的名称。")]),t._v(" "),a("li",[a("code",[t._v("method")]),t._v("：字符串，表示提交给服务器时所使用的 HTTP 方法。")]),t._v(" "),a("li",[a("code",[t._v("target")]),t._v("：字符串，表示表单提交后，服务器返回的数据的展示位置。")]),t._v(" "),a("li",[a("code",[t._v("action")]),t._v("：字符串，表示表单提交数据的 URL。")]),t._v(" "),a("li",[a("code",[t._v("enctype")]),t._v("（或"),a("code",[t._v("encoding")]),t._v("）：字符串，表示表单提交数据的编码方法，可能的值有"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),a("code",[t._v("multipart/form-data")]),t._v("和"),a("code",[t._v("text/plain")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("acceptCharset")]),t._v("：字符串，表示服务器所能接受的字符编码，多个编码格式之间使用逗号或空格分隔。")]),t._v(" "),a("li",[a("code",[t._v("autocomplete")]),t._v("：字符串"),a("code",[t._v("on")]),t._v("或"),a("code",[t._v("off")]),t._v("，表示浏览器是否要对"),a("code",[t._v("<input>")]),t._v("控件提供自动补全。")]),t._v(" "),a("li",[a("code",[t._v("noValidate")]),t._v("：布尔值，表示是否关闭表单的自动校验。")])]),t._v(" "),a("h3",{attrs:{id:"htmlformelement-的实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlformelement-的实例方法"}},[t._v("#")]),t._v(" HTMLFormElement 的实例方法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("submit()")]),t._v("：提交表单，但是不会触发"),a("code",[t._v("submit")]),t._v("事件和表单的自动校验。")]),t._v(" "),a("li",[a("code",[t._v("reset()")]),t._v("：重置表单控件的值为默认值。")]),t._v(" "),a("li",[a("code",[t._v("checkValidity()")]),t._v("：如果控件能够通过自动校验，返回"),a("code",[t._v("true")]),t._v("，否则返回"),a("code",[t._v("false")]),t._v("，同时触发"),a("code",[t._v("invalid")]),t._v("事件。")])]),t._v(" "),a("p",[t._v("下面是一个创建表单并提交的例子。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'form'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("action "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/cgi-bin/some.cgi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-input-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-input-元素"}},[t._v("#")]),t._v(" 4 input 元素")]),t._v(" "),a("p",[a("code",[t._v("<input>")]),t._v("元素主要用于表单组件，它继承了 HTMLInputElement 接口。")]),t._v(" "),a("h3",{attrs:{id:"htmlinputelement-的实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlinputelement-的实例属性"}},[t._v("#")]),t._v(" HTMLInputElement 的实例属性")]),t._v(" "),a("h3",{attrs:{id:"特征属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征属性"}},[t._v("#")]),t._v(" 特征属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("name")]),t._v("：字符串，表示"),a("code",[t._v("<input>")]),t._v("节点的名称。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("type")]),t._v("：字符串，表示"),a("code",[t._v("<input>")]),t._v("节点的类型。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("disabled")]),t._v("：布尔值，表示"),a("code",[t._v("<input>")]),t._v("节点是否禁止使用。一旦被禁止使用，表单提交时不会包含该"),a("code",[t._v("<input>")]),t._v("节点。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("autofocus")]),t._v("：布尔值，表示页面加载时，该元素是否会自动获得焦点。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("required")]),t._v("：布尔值，表示表单提交时，该"),a("code",[t._v("<input>")]),t._v("元素是否必填。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v("：字符串，表示该"),a("code",[t._v("<input>")]),t._v("节点的值。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("validity")]),t._v("：返回一个"),a("code",[t._v("ValidityState")]),t._v("对象，表示"),a("code",[t._v("<input>")]),t._v("节点的校验状态。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("validationMessage")]),t._v("：字符串，表示该"),a("code",[t._v("<input>")]),t._v("节点的校验失败时，用户看到的报错信息。如果该节点不需要校验，或者通过校验，该属性为空字符串。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("willValidate")]),t._v("：布尔值，表示表单提交时，该"),a("code",[t._v("<input>")]),t._v("元素是否会被校验。该属性只读。")])]),t._v(" "),a("h3",{attrs:{id:"表单相关属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单相关属性"}},[t._v("#")]),t._v(" 表单相关属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("form")]),t._v("：返回"),a("code",[t._v("<input>")]),t._v("元素所在的表单（"),a("code",[t._v("<form>")]),t._v("）节点。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("formAction")]),t._v("：字符串，表示表单提交时的服务器目标。该属性可读写，一旦设置了这个属性，会覆盖表单元素的"),a("code",[t._v("action")]),t._v("属性。")]),t._v(" "),a("li",[a("code",[t._v("formEncType")]),t._v("：字符串，表示表单提交时数据的编码方式。该属性可读写，一旦设置了这个属性，会覆盖表单元素的"),a("code",[t._v("enctype")]),t._v("的属性。")]),t._v(" "),a("li",[a("code",[t._v("formMethod")]),t._v("：字符串，表示表单提交时的 HTTP 方法。该属性可读写，一旦设置了这个属性，会覆盖表单元素的"),a("code",[t._v("method")]),t._v("属性。")]),t._v(" "),a("li",[a("code",[t._v("formNoValidate")]),t._v("：布尔值，表示表单提交时，是否要跳过校验。该属性可读写，一旦设置了这个属性，会覆盖表单元素的"),a("code",[t._v("formNoValidate")]),t._v("属性。")]),t._v(" "),a("li",[a("code",[t._v("formTarget")]),t._v("：字符串，表示表单提交后，服务器返回数据的打开位置。该属性可读写，一旦设置了这个属性，会覆盖表单元素的"),a("code",[t._v("target")]),t._v("属性。")])]),t._v(" "),a("h3",{attrs:{id:"文本输入框的特有属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本输入框的特有属性"}},[t._v("#")]),t._v(" 文本输入框的特有属性")]),t._v(" "),a("p",[t._v("以下属性只有在"),a("code",[t._v("<input>")]),t._v("元素可以输入文本时才有效。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("autocomplete")]),t._v("：字符串"),a("code",[t._v("on")]),t._v("或"),a("code",[t._v("off")]),t._v("，表示该"),a("code",[t._v("<input>")]),t._v("节点的输入内容可以被浏览器自动补全。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("maxLength")]),t._v("：整数，表示可以输入的字符串最大长度。如果设为负整数，会报错。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v("：整数，表示"),a("code",[t._v("<input>")]),t._v("节点的显示长度。如果类型是"),a("code",[t._v("text")]),t._v("或"),a("code",[t._v("password")]),t._v("，该属性的单位是字符个数，否则单位是像素。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("pattern")]),t._v("：字符串，表示"),a("code",[t._v("<input>")]),t._v("节点的值应该满足的正则表达式。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("placeholder")]),t._v("：字符串，表示该"),a("code",[t._v("<input>")]),t._v("节点的占位符，作为对元素的提示。该字符串不能包含回车或换行。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("readOnly")]),t._v("：布尔值，表示用户是否可以修改该节点的值。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("min")]),t._v("：字符串，表示该节点的最小数值或日期，且不能大于"),a("code",[t._v("max")]),t._v("属性。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("max")]),t._v("：字符串，表示该节点的最大数值或日期，且不能小于"),a("code",[t._v("min")]),t._v("属性。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("selectionStart")]),t._v("：整数，表示选中文本的起始位置。如果没有选中文本，返回光标在"),a("code",[t._v("<input>")]),t._v("元素内部的位置。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("selectionEnd")]),t._v("：整数，表示选中文本的结束位置。如果没有选中文本，返回光标在"),a("code",[t._v("<input>")]),t._v("元素内部的位置。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("selectionDirection")]),t._v("：字符串，表示选中文本的方向。可能的值包括"),a("code",[t._v("forward")]),t._v("（与文字书写方向一致）、"),a("code",[t._v("backward")]),t._v("（与文字书写方向相反）和"),a("code",[t._v("none")]),t._v("（文字方向未知）。该属性可读写。")])]),t._v(" "),a("h3",{attrs:{id:"复选框和单选框的特有属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复选框和单选框的特有属性"}},[t._v("#")]),t._v(" 复选框和单选框的特有属性")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("<input>")]),t._v("元素的类型是复选框（checkbox）或单选框（radio），会有下面的特有属性。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("checked")]),t._v("：布尔值，表示该"),a("code",[t._v("<input>")]),t._v("元素是否选中。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("defaultChecked")]),t._v("：布尔值，表示该"),a("code",[t._v("<input>")]),t._v("元素默认是否选中。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("indeterminate")]),t._v("：布尔值，表示该"),a("code",[t._v("<input>")]),t._v("元素是否还没有确定的状态。一旦用户点击过一次，该属性就会变成"),a("code",[t._v("false")]),t._v("，表示用户已经给出确定的状态了。该属性可读写。")])]),t._v(" "),a("h3",{attrs:{id:"图像按钮的特有属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图像按钮的特有属性"}},[t._v("#")]),t._v(" 图像按钮的特有属性")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("<input>")]),t._v("元素的类型是"),a("code",[t._v("image")]),t._v("，就会变成一个图像按钮，会有下面的特有属性。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("alt")]),t._v("：字符串，图像无法显示时的替代文本。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("height")]),t._v("：字符串，表示该元素的高度（单位像素）。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("src")]),t._v("：字符串，表示该元素的图片来源。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("width")]),t._v("：字符串，表示该元素的宽度（单位像素）。该属性可读写。")])]),t._v(" "),a("h3",{attrs:{id:"文件上传按钮的特有属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件上传按钮的特有属性"}},[t._v("#")]),t._v(" 文件上传按钮的特有属性")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("<input>")]),t._v("元素的类型是"),a("code",[t._v("file")]),t._v("，就会变成一个文件上传按钮，会有下面的特有属性。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("accept")]),t._v("：字符串，表示该元素可以接受的文件类型，类型之间使用逗号分隔。该属性可读写。")]),t._v(" "),a("li",[a("code",[t._v("files")]),t._v("：返回一个"),a("code",[t._v("FileList")]),t._v("实例对象，包含了选中上传的一组"),a("code",[t._v("File")]),t._v("实例对象。")])]),t._v(" "),a("h3",{attrs:{id:"其他属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他属性"}},[t._v("#")]),t._v(" 其他属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("defaultValue")]),t._v("：字符串，表示该"),a("code",[t._v("<input>")]),t._v("节点的原始值。")]),t._v(" "),a("li",[a("code",[t._v("dirName")]),t._v("：字符串，表示文字方向。")]),t._v(" "),a("li",[a("code",[t._v("accessKey")]),t._v("：字符串，表示让该"),a("code",[t._v("<input>")]),t._v("节点获得焦点的某个字母键。")]),t._v(" "),a("li",[a("code",[t._v("list")]),t._v("：返回一个"),a("code",[t._v("<datalist>")]),t._v("节点，该节点必须绑定"),a("code",[t._v("<input>")]),t._v("元素，且"),a("code",[t._v("<input>")]),t._v("元素的类型必须可以输入文本，否则无效。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("multiple")]),t._v("：布尔值，表示是否可以选择多个值。")]),t._v(" "),a("li",[a("code",[t._v("labels")]),t._v("：返回一个"),a("code",[t._v("NodeList")]),t._v("实例，代表绑定当前"),a("code",[t._v("<input>")]),t._v("节点的"),a("code",[t._v("<label>")]),t._v("元素。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("step")]),t._v("：字符串，表示在"),a("code",[t._v("min")]),t._v("属性到"),a("code",[t._v("max")]),t._v("属性之间，每次递增或递减时的数值或时间。")]),t._v(" "),a("li",[a("code",[t._v("valueAsDate")]),t._v("："),a("code",[t._v("Date")]),t._v("实例，一旦设置，该"),a("code",[t._v("<input>")]),t._v("元素的值会被解释为指定的日期。如果无法解析该属性的值，"),a("code",[t._v("<input>")]),t._v("节点的值将是"),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("valueAsNumber")]),t._v("：浮点数，当前"),a("code",[t._v("<input>")]),t._v("元素的值会被解析为这个数值。")])]),t._v(" "),a("h3",{attrs:{id:"htmlinputelement-的实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlinputelement-的实例方法"}},[t._v("#")]),t._v(" HTMLInputElement 的实例方法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("focus()")]),t._v("：当前"),a("code",[t._v("<input>")]),t._v("元素获得焦点。")]),t._v(" "),a("li",[a("code",[t._v("blur()")]),t._v("：移除"),a("code",[t._v("<input>")]),t._v("元素的焦点。")]),t._v(" "),a("li",[a("code",[t._v("select()")]),t._v("：选中"),a("code",[t._v("<input>")]),t._v("元素内部的所有文本。该方法不能保证"),a("code",[t._v("<input>")]),t._v("获得焦点，最好先用"),a("code",[t._v("focus()")]),t._v("方法，再用这个方法。")]),t._v(" "),a("li",[a("code",[t._v("click()")]),t._v("：模拟鼠标点击当前的"),a("code",[t._v("<input>")]),t._v("元素。")]),t._v(" "),a("li",[a("code",[t._v("setSelectionRange()")]),t._v("：选中"),a("code",[t._v("<input>")]),t._v("元素内部的一段文本，但不会将焦点转移到选中的文本。该方法接受三个参数，第一个参数是开始的位置（从0开始），第二个参数是结束的位置（不包括该位置），第三个参数是可选的，表示选择的方向，有三个可能的值（"),a("code",[t._v("forward")]),t._v("、"),a("code",[t._v("backward")]),t._v("和默认值"),a("code",[t._v("none")]),t._v("）。")]),t._v(" "),a("li",[a("code",[t._v("setRangeText()")]),t._v("：新文本替换选中的文本。该方法接受四个参数，第一个参数是新文本，第二个参数是替换的开始位置，第三个参数是结束位置，第四个参数表示替换后的行为（可选），有四个可能的值："),a("code",[t._v("select")]),t._v("（选中新插入的文本）、"),a("code",[t._v("start")]),t._v("（选中的开始位置移到插入的文本之前）、"),a("code",[t._v("end")]),t._v("（选中的文本移到插入的文本之后）、"),a("code",[t._v("preserve")]),t._v("（保留原先选中的位置，默认值）。")]),t._v(" "),a("li",[a("code",[t._v("setCustomValidity()")]),t._v("：该方法用于自定义校验失败时的报错信息。它的参数就是报错的提示信息。注意，一旦设置了自定义报错信息，该字段就不会校验通过了，因此用户重新输入时，必须将自定义报错信息设为空字符串，请看下面的例子。")]),t._v(" "),a("li",[a("code",[t._v("checkValidity()")]),t._v("：返回一个布尔值，表示当前节点的校验结果。如果返回"),a("code",[t._v("false")]),t._v("，表示不满足校验要求，否则就是校验成功或不必校验。")]),t._v(" "),a("li",[a("code",[t._v("stepDown()")]),t._v("：将当前"),a("code",[t._v("<input>")]),t._v("节点的值减少一个步长。该方法可以接受一个整数"),a("code",[t._v("n")]),t._v("作为参数，表示一次性减少"),a("code",[t._v("n")]),t._v("个步长，默认是"),a("code",[t._v("1")]),t._v("。有几种情况会抛错：当前"),a("code",[t._v("<input>")]),t._v("节点不适合递减或递增、当前节点没有"),a("code",[t._v("step")]),t._v("属性、"),a("code",[t._v("<input>")]),t._v("节点的值不能转为数字、递减之后的值小于"),a("code",[t._v("min")]),t._v("属性或大于"),a("code",[t._v("max")]),t._v("属性。")]),t._v(" "),a("li",[a("code",[t._v("stepUp()")]),t._v("：将当前"),a("code",[t._v("<input>")]),t._v("节点的值增加一个步长。其他与"),a("code",[t._v("stepDown()")]),t._v("方法相同。")])]),t._v(" "),a("p",[t._v("下面是"),a("code",[t._v("setSelectionRange()")]),t._v("方法的一个例子。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* HTML 代码如下\n  <p><input type="text" id="mytextbox" size="20" value="HelloWorld"/></p>\n  <p><button onclick="SelectText()">选择文本</button></p>\n*/')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SelectText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mytextbox'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSelectionRange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面代码中，点击按钮以后，会选中"),a("code",[t._v("llo")]),t._v("三个字符。")]),t._v(" "),a("p",[t._v("下面是"),a("code",[t._v("setCustomValidity()")]),t._v("的例子。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* HTML 代码如下\n  <form id="form">\n    <input id="field" type="text" pattern="[a-f,0-9]{4}" autocomplete=off>\n  </form>\n*/')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" form   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#form'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" field  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#field'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'submit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 防止这个例子发出 POST 请求")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfield"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("oninvalid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCustomValidity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'必须是一个 4 位十六进制数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nfield"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("oninput")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCustomValidity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面代码中，输入框必须输入一个4位的十六进制数。如果不满足条件（比如输入"),a("code",[t._v("xxx")]),t._v("），按下回车键以后，就会提示自定义的报错信息。一旦自定义了报错信息，输入框就会一直处于校验失败状态，因此重新输入时，必须把自定义报错信息设为空字符串。另外，为了避免自动补全提示框遮住报错信息，必须将输入框的"),a("code",[t._v("autocomplete")]),t._v("属性关闭。")]),t._v(" "),a("h2",{attrs:{id:"_5-button-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-button-元素"}},[t._v("#")]),t._v(" 5 button 元素")]),t._v(" "),a("p",[a("code",[t._v("<button/>")]),t._v("元素继承了"),a("code",[t._v("HTMLButtonElement")]),t._v("接口。它有以下的实例属性。")]),t._v(" "),a("p",[a("strong",[t._v("（1）HTMLButtonElement.accessKey")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.accessKey")]),t._v("属性返回一个字符串，表示键盘上对应的键，通过"),a("code",[t._v("Alt + 这个键")]),t._v("可以让按钮获得焦点。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（2）HTMLButtonElement.autofocus")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.autofocus")]),t._v("属性是一个布尔值，表示页面加载过程中，按钮是否会自动获得焦点。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（3）HTMLButtonElement.disabled")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.disabled")]),t._v("属性是一个布尔值，表示该按钮是否禁止点击。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（4）HTMLButtonElement.form")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.form")]),t._v("属性是一个表单元素，返回该按钮所在的表单。该属性只读。如果按钮不属于任何表单，该属性返回"),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("（5）HTMLButtonElement.formAction")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.formAction")]),t._v("返回一个字符串，表示表单提交的 URL。该属性可读写，一旦设置了值，点击按钮就会提交到该属性指定的 URL，而不是"),a("code",[t._v("<form>")]),t._v("元素指定的 URL。")]),t._v(" "),a("p",[a("strong",[t._v("（6）HTMLButtonElement.formEnctype")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.formEnctype")]),t._v("属性是一个字符串，表示数据提交到服务器的编码类型。该属性可读写，一旦设置了值，点击按钮会按照该属性指定的编码方式，而不是"),a("code",[t._v("<form>")]),t._v("元素指定的编码方式。")]),t._v(" "),a("p",[t._v("该属性可以取以下的值。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("application/x-www-form-urlencoded")]),t._v("（默认值）")]),t._v(" "),a("li",[a("code",[t._v("multipart/form-data")]),t._v("（上传文件的编码方式）")]),t._v(" "),a("li",[a("code",[t._v("text/plain")])])]),t._v(" "),a("p",[a("strong",[t._v("（7）HTMLButtonElement.formMethod")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.formMethod")]),t._v("属性是一个字符串，表示浏览器提交表单的 HTTP 方法。该属性可读写，一旦设置了值，点击后就会采用该属性指定的 HTTP 方法，而不是"),a("code",[t._v("<form>")]),t._v("元素指定的编码方法。")]),t._v(" "),a("p",[a("strong",[t._v("（8）HTMLButtonElement.formNoValidate")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.formNoValidate")]),t._v("属性是一个布尔值，表示点击按钮提交表单时，是否要跳过表单校验的步骤。该属性可读写，一旦设置会覆盖"),a("code",[t._v("<form>")]),t._v("元素的"),a("code",[t._v("novalidate")]),t._v("属性。")]),t._v(" "),a("p",[a("strong",[t._v("（9）HTMLButtonElement.formTarget")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.formTarget")]),t._v("属性是一个字符串，指定了提交了表单以后，哪个窗口展示服务器返回的内容。该属性可读写，一旦设置会覆盖"),a("code",[t._v("<form>")]),t._v("元素的"),a("code",[t._v("target")]),t._v("属性。")]),t._v(" "),a("p",[a("strong",[t._v("（10）HTMLButtonElement.labels")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.labels")]),t._v("返回"),a("code",[t._v("NodeList")]),t._v("实例，表示那些绑定按钮的"),a("code",[t._v("<label>")]),t._v("元素。该属性只读。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* HTML 代码如下\n  <label id="label1" for="test">Label 1</label>\n  <button id="test">Button</button>\n  <label id="label2" for="test">Label 2</label>\n*/')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("labels"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("labels"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Label 1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Label 2"')]),t._v("\n")])])]),a("p",[t._v("上面代码中，两个"),a("code",[t._v("<label>")]),t._v("元素绑定"),a("code",[t._v("<button>")]),t._v("元素。"),a("code",[t._v("button.labels")]),t._v("返回这两个"),a("code",[t._v("<label>")]),t._v("元素。")]),t._v(" "),a("p",[a("strong",[t._v("（11）HTMLButtonElement.name")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.name")]),t._v("属性是一个字符串，表示按钮元素的"),a("code",[t._v("name")]),t._v("属性。如果没有设置"),a("code",[t._v("name")]),t._v("属性，则返回空字符串。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（12）HTMLButtonElement.tabIndex")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.tabIndex")]),t._v("是一个整数，代表按钮元素的 Tab 键顺序。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（13）HTMLButtonElement.type")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.type")]),t._v("属性是一个字符串，表示按钮的行为。该属性可读写，可能取以下的值。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("submit")]),t._v("：默认值，表示提交表单。")]),t._v(" "),a("li",[a("code",[t._v("reset")]),t._v("：重置表单。")]),t._v(" "),a("li",[a("code",[t._v("button")]),t._v("：没有任何默认行为。")])]),t._v(" "),a("p",[a("strong",[t._v("（14）HTMLButtonElement.validationMessage")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.validationMessage")]),t._v("属性是一个字符串，表示没有通过校验时显示的提示信息。该属性只读。")]),t._v(" "),a("p",[a("strong",[t._v("（15）HTMLButtonElement.validity")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.validity")]),t._v("属性返回该按钮的校验状态（"),a("code",[t._v("ValidityState")]),t._v("）。该属性只读。")]),t._v(" "),a("p",[a("strong",[t._v("（16）HTMLButtonElement.value")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.value")]),t._v("属性返回该按钮绑定的值。该属性可读写。")]),t._v(" "),a("p",[a("strong",[t._v("（17）HTMLButtonElement.willValidate")])]),t._v(" "),a("p",[a("code",[t._v("HTMLButtonElement.willValidate")]),t._v("属性是一个布尔值，表示该按钮提交表单时是否将被校验，默认为"),a("code",[t._v("false")]),t._v("。该属性只读。")]),t._v(" "),a("h2",{attrs:{id:"_6-option-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-option-元素"}},[t._v("#")]),t._v(" 6 option 元素")]),t._v(" "),a("p",[a("code",[t._v("<option/>")]),t._v("元素表示下拉框（"),a("code",[t._v("<select/>")]),t._v("，"),a("code",[t._v("<optgroup/>")]),t._v("或"),a("code",[t._v("<datalist/>")]),t._v("）里面的一个选项。它是 HTMLOptionElement 接口的实例。")]),t._v(" "),a("h3",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("p",[t._v("除了继承 HTMLElement 接口的属性和方法，HTMLOptionElement 接口具有下面的属性。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("disabled")]),t._v("：布尔值，表示该项是否可选择。")]),t._v(" "),a("li",[a("code",[t._v("defaultSelected")]),t._v("：布尔值，表示该项是否默认选中。一旦设为"),a("code",[t._v("true")]),t._v("，该项的值就是"),a("code",[t._v("<select>")]),t._v("的默认值。")]),t._v(" "),a("li",[a("code",[t._v("form")]),t._v("：返回"),a("code",[t._v("<option>")]),t._v("所在的表单元素。如果不属于任何表单，则返回"),a("code",[t._v("null")]),t._v("。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("index")]),t._v("：整数，表示该选项在整个下拉列表里面的位置。该属性只读。")]),t._v(" "),a("li",[a("code",[t._v("label")]),t._v("：字符串，表示对该选项的说明。如果该属性未设置，则返回该选项的文本内容。")]),t._v(" "),a("li",[a("code",[t._v("selected")]),t._v("：布尔值，表示该选项是否选中。")]),t._v(" "),a("li",[a("code",[t._v("text")]),t._v("：字符串，该选项的文本内容。")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v("：字符串，该选项的值。表单提交时，上传的就是选中项的这个属性。")])]),t._v(" "),a("h3",{attrs:{id:"option-构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option-构造函数"}},[t._v("#")]),t._v(" Option() 构造函数")]),t._v(" "),a("p",[t._v("浏览器原生提供"),a("code",[t._v("Option()")]),t._v("构造函数，用来生成 HTMLOptionElement 实例。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultSelected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("它接受四个参数，都是可选的。")]),t._v(" "),a("ul",[a("li",[t._v("text：字符串，表示该选项的文本内容。如果省略，返回空字符串。")]),t._v(" "),a("li",[t._v("value：字符串，表示该选项的值。如果省略，默认返回"),a("code",[t._v("text")]),t._v("属性的值。")]),t._v(" "),a("li",[t._v("defaultSelected：布尔值，表示该项是否默认选中，默认为"),a("code",[t._v("false")]),t._v("。注意，即使设为"),a("code",[t._v("true")]),t._v("，也不代表该项的"),a("code",[t._v("selected")]),t._v("属性为"),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("li",[t._v("selected：布尔值，表示该项是否选中，默认为"),a("code",[t._v("false")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newOption "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Option")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nnewOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\nnewOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "world"')]),t._v("\nnewOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultSelected "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nnewOption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selected "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("上面代码中，"),a("code",[t._v("newOption")]),t._v("的"),a("code",[t._v("defaultSelected")]),t._v("属性为"),a("code",[t._v("true")]),t._v("，但是它没有被选中（即"),a("code",[t._v("selected")]),t._v("属性为"),a("code",[t._v("false")]),t._v("）。")]),t._v(" "),a("h2",{attrs:{id:"_7-video-audio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-video-audio"}},[t._v("#")]),t._v(" 7 video，audio")]),t._v(" "),a("h3",{attrs:{id:"概述-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述-2"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[a("code",[t._v("<video/>")]),t._v("元素用来加载视频，是"),a("code",[t._v("HTMLVideoElement")]),t._v("对象的实例。"),a("code",[t._v("<audio/>")]),t._v("元素用来加载音频，是"),a("code",[t._v("HTMLAudioElement")]),t._v("对象的实例。而"),a("code",[t._v("HTMLVideoElement")]),t._v("和"),a("code",[t._v("HTMLAudioElement")]),t._v("都继承了"),a("code",[t._v("HTMLMediaElement")]),t._v("，所以这两个 HTML 元素有许多共同的属性和方法，可以放在一起介绍。")]),t._v(" "),a("p",[t._v("理论上，这两个 HTML 元素直接用"),a("code",[t._v("src")]),t._v("属性指定媒体文件，就可以使用了。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("audio")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("background_music.mp3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("video")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("news.mov"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("320")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("240/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("注意，"),a("code",[t._v("<video/>")]),t._v("元素有"),a("code",[t._v("width")]),t._v("属性和"),a("code",[t._v("height")]),t._v("属性，可以指定宽和高。"),a("code",[t._v("<audio/>")]),t._v("元素没有这两个属性，因为它的播放器外形是浏览器给定的，不能指定。")]),t._v(" "),a("p",[t._v("实际上，不同的浏览器支持不同的媒体格式，我们不得不用"),a("code",[t._v("<source/>")]),t._v("元素指定同一个媒体文件的不同格式。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("audio")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music.mp3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("audio/mpeg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("music.ogg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v('audio/ogg; codec="vorbis"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("audio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("浏览器遇到支持的格式，就会忽略后面的格式。")]),t._v(" "),a("p",[t._v("这两个元素都有一个"),a("code",[t._v("controls")]),t._v("属性，只有打开这个属性，才会显示控制条。注意，"),a("code",[t._v("<audio>")]),t._v("元素如果不打开"),a("code",[t._v("controls")]),t._v("属性，根本不会显示，而是直接在背景播放。")]),t._v(" "),a("h3",{attrs:{id:"htmlmediaelement-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlmediaelement-接口"}},[t._v("#")]),t._v(" HTMLMediaElement 接口")]),t._v(" "),a("p",[a("code",[t._v("HTMLMediaElement")]),t._v("并没有对应的 HTML 元素，而是作为"),a("code",[t._v("<video>")]),t._v("和"),a("code",[t._v("<audio>")]),t._v("的基类，定义一些它们共同的属性和方法。")]),t._v(" "),a("p",[a("code",[t._v("HTMLMediaElement")]),t._v("接口有以下属性。")]),t._v(" "),a("ul",[a("li",[t._v("HTMLMediaElement.audioTracks：返回一个类似数组的对象，表示媒体文件包含的音轨。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.autoplay：布尔值，表示媒体文件是否自动播放，对应 HTML 属性"),a("code",[t._v("autoplay")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.buffered：返回一个 TimeRanges 对象，表示浏览器缓冲的内容。该对象的"),a("code",[t._v("length")]),t._v("属性返回缓存里面有多少段内容，"),a("code",[t._v("start(rangeId)")]),t._v("方法返回指定的某段内容（从0开始）开始的时间点，"),a("code",[t._v("end()")]),t._v("返回指定的某段内容结束的时间点。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.controls：布尔值，表示是否显示媒体文件的控制栏，对应 HTML 属性"),a("code",[t._v("controls")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.controlsList：返回一个类似数组的对象，表示是否显示控制栏的某些控件。该对象包含三个可能的值："),a("code",[t._v("nodownload")]),t._v("、"),a("code",[t._v("nofullscreen")]),t._v("和"),a("code",[t._v("noremoteplayback")]),t._v("。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.crossOrigin：字符串，表示跨域请求时是否附带用户信息（比如 Cookie），对应 HTML 属性"),a("code",[t._v("crossorigin")]),t._v("。该属性只有两个可能的值："),a("code",[t._v("anonymous")]),t._v("和"),a("code",[t._v("use-credentials")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.currentSrc：字符串，表示当前正在播放的媒体文件的绝对路径。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.currentTime：浮点数，表示当前播放的时间点。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.defaultMuted：布尔值，表示默认是否关闭音量，对应 HTML 属性"),a("code",[t._v("muted")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.defaultPlaybackRate：浮点数，表示默认的播放速率，默认是1.0。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.disableRemotePlayback：布尔值，是否允许远程回放，即远程回放的时候是否会有工具栏。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.duration：浮点数，表示媒体文件的时间长度（单位秒）。如果当前没有媒体文件，该属性返回0。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.ended：布尔值，表示当前媒体文件是否已经播放结束。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.error：返回最近一次报错的错误对象，如果没有报错，返回"),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.loop：布尔值，表示媒体文件是否会循环播放，对应 HTML 属性"),a("code",[t._v("loop")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.muted：布尔值，表示音量是否关闭。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.networkState：当前网络状态，共有四个可能的值。0表示没有数据；1表示媒体元素处在激活状态，但是还没开始下载；2表示下载中；3表示没有找到媒体文件。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.paused：布尔值，表示媒体文件是否处在暂停状态。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.playbackRate：浮点数，表示媒体文件的播放速度，1.0是正常速度。如果是负数，表示向后播放。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.played：返回一个 TimeRanges 对象，表示播放的媒体内容。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.preload：字符串，表示应该预加载哪些内容，可能的值为"),a("code",[t._v("none")]),t._v("、"),a("code",[t._v("metadata")]),t._v("和"),a("code",[t._v("auto")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.readyState：整数，表示媒体文件的准备状态，可能的值为0（没有任何数据）、1（已获取元数据）、2（可播放当前帧，但不足以播放多个帧）、3（可以播放多帧，至少为两帧）、4（可以流畅播放）。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.seekable：返回一个 TimeRanges 对象，表示一个用户可以搜索的媒体内容范围。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.seeking：布尔值，表示媒体文件是否正在寻找新位置。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.src：布尔值，表示媒体文件的 URL，对应 HTML 属性"),a("code",[t._v("src")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.srcObject：返回"),a("code",[t._v("src")]),t._v("属性对应的媒体文件资源，可能是"),a("code",[t._v("MediaStream")]),t._v("、"),a("code",[t._v("MediaSource")]),t._v("、"),a("code",[t._v("Blob")]),t._v("或"),a("code",[t._v("File")]),t._v("对象。直接指定这个属性，就可以播放媒体文件。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.textTracks：返回一个类似数组的对象，包含所有文本轨道。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.videoTracks：返回一个类似数组的对象，包含多有视频轨道。该属性只读。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.volume：浮点数，表示音量。0.0 表示静音，1.0 表示最大音量。")])]),t._v(" "),a("p",[a("code",[t._v("HTMLMediaElement")]),t._v("接口有如下方法。")]),t._v(" "),a("ul",[a("li",[t._v("HTMLMediaElement.addTextTrack()：添加文本轨道（比如字幕）到媒体文件。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.captureStream()：返回一个 MediaStream 对象，用来捕获当前媒体文件的流内容。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.canPlayType()：该方法接受一个 MIME 字符串作为参数，用来判断这种类型的媒体文件是否可以播放。该反复返回一个字符串，有三种可能的值，"),a("code",[t._v("probably")]),t._v("表示似乎可播放，"),a("code",[t._v("maybe")]),t._v("表示无法在不播放的情况下判断是否可播放，空字符串表示无法播放。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.fastSeek()：该方法接受一个浮点数作为参数，表示指定的时间（单位秒）。该方法将媒体文件移动到指定时间。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.load()：重新加载媒体文件。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.pause()：暂停播放。该方法没有返回值。")]),t._v(" "),a("li",[t._v("HTMLMediaElement.play()：开始播放。该方法返回一个 Promise 对象。")])]),t._v(" "),a("p",[t._v("下面是"),a("code",[t._v("play()")]),t._v("方法的一个例子。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myVideo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myVideoElement'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmyVideo\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'playing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"htmlvideoelement-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlvideoelement-接口"}},[t._v("#")]),t._v(" HTMLVideoElement 接口")]),t._v(" "),a("p",[a("code",[t._v("HTMLVideoElement")]),t._v("接口代表了"),a("code",[t._v("<video>")]),t._v("元素。这个接口继承了"),a("code",[t._v("HTMLMediaElement")]),t._v("接口，并且有一些自己的属性和方法。")]),t._v(" "),a("p",[t._v("HTMLVideoElement 接口的属性。")]),t._v(" "),a("ul",[a("li",[t._v("HTMLVideoElement.height：字符串，表示视频播放区域的高度（单位像素），对应 HTML 属性"),a("code",[t._v("height")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLVideoElement.width：字符串，表示视频播放区域的宽度（单位像素），对应 HTML 属性"),a("code",[t._v("width")]),t._v("。")]),t._v(" "),a("li",[t._v("HTMLVideoElement.videoHeight：该属性只读，返回一个整数，表示视频文件自身的高度（单位像素）。")]),t._v(" "),a("li",[t._v("HTMLVideoElement.videoWidth：该属性只读，返回一个整数，表示视频文件自身的宽度（单位像素）。")]),t._v(" "),a("li",[t._v("HTMLVideoElement.poster：字符串，表示一个图像文件的 URL，用来在无法获取视频文件时替代显示，对应 HTML 属性"),a("code",[t._v("poster")]),t._v("。")])]),t._v(" "),a("p",[t._v("HTMLVideoElement 接口的方法。")]),t._v(" "),a("ul",[a("li",[t._v("HTMLVideoElement.getVideoPlaybackQuality()：返回一个对象，包含了当前视频回访的一些数据。")])]),t._v(" "),a("h3",{attrs:{id:"htmlaudioelement-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlaudioelement-接口"}},[t._v("#")]),t._v(" HTMLAudioElement 接口")]),t._v(" "),a("p",[a("code",[t._v("HTMLAudioElement")]),t._v("接口代表了"),a("code",[t._v("<audio>")]),t._v("元素。")]),t._v(" "),a("p",[t._v("该接口继承了"),a("code",[t._v("HTMLMediaElement")]),t._v("，但是没有定义自己的属性和方法。浏览器原生提供一个"),a("code",[t._v("Audio()")]),t._v("构造函数，返回的就是"),a("code",[t._v("HTMLAudioElement")]),t._v("实例。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" song "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Audio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("URLString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("Audio()")]),t._v("构造函数接受一个字符串作为参数，表示媒体文件的 URL。如果省略这个参数，可以稍后通过"),a("code",[t._v("src")]),t._v("属性指定。")]),t._v(" "),a("p",[t._v("生成"),a("code",[t._v("HTMLAudioElement")]),t._v("实例以后，不用插入 DOM，可以直接用"),a("code",[t._v("play()")]),t._v("方法在背景播放。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Audio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("canPlayType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'audio/wav'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'soundeffect.wav'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),a("p",[a("code",[t._v("<video>")]),t._v("和"),a("code",[t._v("<audio>")]),t._v("元素有以下事件。")]),t._v(" "),a("ul",[a("li",[t._v("loadstart：开始加载媒体文件时触发。")]),t._v(" "),a("li",[t._v("progress：媒体文件加载过程中触发，大概是每秒触发2到8次。")]),t._v(" "),a("li",[t._v("loadedmetadata：媒体文件元数据加载成功时触发。")]),t._v(" "),a("li",[t._v("loadeddata：当前播放位置加载成功后触发。")]),t._v(" "),a("li",[t._v("canplay：已经加载了足够的数据，可以开始播放时触发，后面可能还会请求数据。")]),t._v(" "),a("li",[t._v("canplaythrough：已经加载了足够的数据，可以一直播放时触发，后面不需要继续请求数据。")]),t._v(" "),a("li",[t._v("suspend：已经缓冲了足够的数据，暂时停止下载时触发。")]),t._v(" "),a("li",[t._v("stalled：尝试加载数据，但是没有数据返回时触发。")]),t._v(" "),a("li",[t._v("play：调用"),a("code",[t._v("play()")]),t._v("方法时或自动播放启动时触发。如果已经加载了足够的数据，这个事件后面会紧跟"),a("code",[t._v("playing")]),t._v("事件，否则会触发"),a("code",[t._v("waiting")]),t._v("事件。")]),t._v(" "),a("li",[t._v("waiting：由于没有足够的缓存数据，无法播放或播放停止时触发。一旦缓冲数据足够开始播放，后面就会紧跟"),a("code",[t._v("playing")]),t._v("事件。")]),t._v(" "),a("li",[t._v("playing：媒体开始播放时触发。")]),t._v(" "),a("li",[t._v("timeupdate："),a("code",[t._v("currentTime")]),t._v("属性变化时触发，每秒可能触发4到60次。")]),t._v(" "),a("li",[t._v("pause：调用"),a("code",[t._v("pause()")]),t._v("方法、播放暂停时触发。")]),t._v(" "),a("li",[t._v("seeking：脚本或者用户要求播放某个没有缓冲的位置，播放停止开始加载数据时触发。此时，"),a("code",[t._v("seeking")]),t._v("属性返回"),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("li",[t._v("seeked："),a("code",[t._v("seeking")]),t._v("属性变回"),a("code",[t._v("false")]),t._v("时触发。")]),t._v(" "),a("li",[t._v("ended：媒体文件播放完毕时触发。")]),t._v(" "),a("li",[t._v("durationchange："),a("code",[t._v("duration")]),t._v("属性变化时触发。")]),t._v(" "),a("li",[t._v("volumechange：音量变回或者静音时触发。")]),t._v(" "),a("li",[t._v("ratechange：播放速度或默认的播放速度变化时触发。")]),t._v(" "),a("li",[t._v("abort：停止加载媒体文件时触发，通常是用户主动要求停止下载。")]),t._v(" "),a("li",[t._v("error：网络或其他原因导致媒体文件无法加载时触发。")]),t._v(" "),a("li",[t._v("emptied：由于"),a("code",[t._v("error")]),t._v("或"),a("code",[t._v("abort")]),t._v("事件导致"),a("code",[t._v("networkState")]),t._v("属性变成无法获取数据时触发。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);